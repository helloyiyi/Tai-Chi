{"mappings":"AAAA,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO,QAAG,CAAgB,AAAhB,EAAsC,AAAtC,oCAAsC;AAC5D,GAAnB,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC3C,GAAG,CAAC,MAAM,IAAI,8mCAgDd;AACA,GAAG,CAAC,OAAO,GAAG,CAAE;AAChB,EAAoD,AAApD,kEAAoE;AACpD,GAAb,CAAC,CAAC,GAAG,CAAC;AAET,GAAG,CAAC,IAAI,OAAS,CAAC;IAChB,UAAU,KAAO,CAAC;QAChB,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,CAAI,KACpB,EAAY,AAAZ,8BAAgC;QACZ,OAAb,IAAI,CAAM;aACZ,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,CAAG,IAC1B,OAAO,IAAI,CAAO;aAElB,EAAY,AAAZ,8BAAgC;QACZ,OAAb,IAAI,MAAM,CAAC,CAAC;QAGrB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAE,CAA4B,AAA5B,EAAsD,AAAtD,oDAAsD;QACtD,KAArB,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK;QACxB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK;QACtB,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1B,EAAe,AAAf,qCAAe;YACf,CAAC,IAAI,CAAC;YACN,IAAI;QACN,CAAC;IACH,CAAC,EAAE,EAAE;AACP,CAAC;AAED,IAAI","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector(\"#html\"); //通过css选择器找到这个元素\r\nlet style = document.querySelector(\"#style\");\r\nlet string = `/*你好，我叫依依\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n*/\r\n#div1{\r\n    border:1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n}\r\n/*\r\n*接下来我把div变成一个八卦图\r\n*注意看好了\r\n*首先，把div变成一个圆\r\n*/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border:none;\r\n}\r\n/*\r\n*八卦是阴阳形成的\r\n*一黑一白\r\n*/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*加一对乾坤圈*/\r\n#div1::before{\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%); \r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(15,15,15,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%); \r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n\r\n`;\r\nlet string2 = \"\";\r\n//string = string.replace(/\\n/g, \"<br>\"); //把所有回车变换行\r\nlet n = 0;\r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    if (string[n] === \"\\n\") {\r\n      //如果是回车，就不照搬\r\n      string2 += \"<br>\";\r\n    } else if (string[n] === \" \") {\r\n      string2 += \"&nbsp\";\r\n    } else {\r\n      //如果不是回车，就照搬\r\n      string2 += string[n];\r\n    }\r\n\r\n    html.innerHTML = string2; //往demo里写字，substring可以从头开始显示\r\n    style.innerHTML = string.substring(0, n);\r\n    window.scrollTo(0, 99999);\r\n    html.scrollTo(0, 99999);\r\n    if (n < string.length - 1) {\r\n      //如果n不是最后一个，就继续\r\n      n += 1;\r\n      step();\r\n    }\r\n  }, 50);\r\n};\r\n\r\nstep();\r\n"],"names":[],"version":3,"file":"index.65c7a1e5.js.map","sourceRoot":"/__parcel_source_root/"}